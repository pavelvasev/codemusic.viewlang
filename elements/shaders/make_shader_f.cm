```
  Вот хорошо, пример создания шейдера.
  
  Вход: 3 агрумента - параметры (список), код вершин, код пикселей
  
  Фишки
  1. Приписывается main и {}. Сообразно до этого можно использовать наши любимые методы соединения текстов.
  2. Анализируется секция params и его параметры прокидываются как uniform float в шейдеры - можно использовать.

  Вопросы: а как бы мне в шейдер передавать результаты вычисления из сцены вообще? (морфизмов сцены, и в частности - внешних параметров)
  напрашивается секция vars по аналогии с Денисом. И в принципе даже ничего плохого в этом дублировании нет.
  Ну да. Это как бы как vars, только правильнее наверное binds.
  
  Наверное это будет todo, когда шейдеры мне реально понадобятся. Сделать вот vars, и передавать я не знаю так - параметры, варсы, верш, пикс.
  Ну или сделать уже полевой make_shader_f и он у поля будет запрашивать чего хотел.
```

#### make_shader_f.rb!
f = ctx.input[0]
def gimme(field,name)
 field.compute({ :tag => :getcol, :default => []},[field,name],"make-shader-f")
end
params = gimme( f,:params )
#vars = gimme( f,:vars )
vertex = gimme( f,:vertex )
pixel = gimme( f,:pixel )

ctx.r = ctx.machine.compute( :make_shader, [params,vertex,pixel], "make_shader_f")
